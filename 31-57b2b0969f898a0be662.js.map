{"version":3,"sources":["webpack:///./src/components/Blog/Tags.js","webpack:///./src/components/Blog/BlogMiniCard.js","webpack:///./src/components/Blog/OtherPosts.js","webpack:///./src/components/Blog/BlogPost.js"],"names":["Tags","tags","tagList","map","tag","Anchor","className","key","to","links","blog","undefined","BlogMiniCard","link","title","img","description","src","alt","OtherPosts","currentId","miniCards","posts","size","length","maxPosts","slice","filter","post","id","images","pop","style","marginBlockStart","BlogPost","children","date","author","previous","findBlog","next","width","marginTop"],"mappings":"iMAqBeA,MAhBF,EAAGC,WACd,MAAMC,EAAUD,EACZA,EAAKE,IAAIC,GACT,kBAACC,EAAA,EAAD,CAAQC,UAAU,WAAWC,IAAKH,EAAKI,GAAOC,IAAMC,KAAX,SAAwBN,GAC9DA,SAEHO,EAEJ,OACE,iCACE,oCACA,yBAAKL,UAAU,iBAAiBJ,K,UCFvBU,MAVM,EAAGC,OAAMC,QAAOC,MAAKC,iBAEtC,kBAACX,EAAA,EAAD,CAAQG,GAAIK,EAAMP,UAAU,uBAC1B,yBAAKW,IAAKF,EAAKG,IAAI,2BACnB,2BAAG,gCAASJ,IACZ,2BAAIE,I,YCgCKG,MArCI,EAAGC,gBAEpB,IAAIC,EAAY,KAChB,IAAIC,EAqBF,OAAO,KArBE,CACT,MAAMC,EAAOD,EAAME,QAAUC,EAAeA,EAAeH,EAAME,OAYjE,GAXAH,EAAYC,EAAMI,MAAM,EAAGH,GAAMI,OAAOC,GAAQR,IAAcQ,EAAKC,IACnER,EAAYA,EAAUlB,IAAIyB,GACxB,kBAAC,EAAD,CACErB,IAAKqB,EAAKC,GACVf,MAAOc,EAAKd,MACZD,KAAMe,EAAKf,KACXE,IAAKa,EAAKE,OAAO,GACjBd,YAAaY,EAAKZ,gBAIjBK,GAAaA,EAAUG,QAAU,EACpC,OAAO,KAGLH,EAAUG,OAnBC,GAoBbH,EAAUU,MAMd,OACE,iCACE,wBAAIC,MAAO,CAAEC,iBAAkB,SAA/B,oBACA,yBAAK3B,UAAU,kCACZe,K,YCgBMa,UA3CE,EAAGC,WAAUrB,QAAOsB,OAAMC,SAAQpC,OAAM4B,SACvD,MAAMS,EAAWC,YAASV,EAAK,GACzBW,EAAOD,YAASV,EAAK,GAE3B,OACE,yBAAKvB,UAAU,8CACb,iCACE,2BAAG,kBAACD,EAAA,EAAD,CAAQG,GAAIC,IAAMC,MAAlB,WACH,wBAAIJ,UAAU,cAAcQ,GAC5B,uBAAGR,UAAU,aAAb,eAAsC+B,EAAtC,OAAkDD,EAAlD,KACA,yBAAK9B,UAAU,aACb,0BAAMA,UAAU,aACb6B,GAEH,2BAAO7B,UAAU,cACf,kBAAC,EAAD,CAAYc,UAAWS,IACvB,kBAAC,EAAD,CAAM5B,KAAMA,QAIhBqC,GAAYE,IACZ,wBAAIR,MAAO,CAAES,MAAO,OAAQC,UAAW,UAEzC,wBAAIpC,UAAU,uCACZ,4BACGgC,GACC,kBAACjC,EAAA,EAAD,CAAQG,GAAI8B,EAASzB,MAArB,KACQyB,EAASxB,QAIrB,4BACG0B,GACC,kBAACnC,EAAA,EAAD,CAAQG,GAAIgC,EAAK3B,MACd2B,EAAK1B,MADR,W","file":"31-57b2b0969f898a0be662.js","sourcesContent":["import React from 'react'\r\nimport './Tags.css'\r\nimport Anchor from '../Anchor/Anchor'\r\nimport links from '../../links'\r\n\r\nconst Tags = ({ tags }) => {\r\n  const tagList = tags\r\n    ? tags.map(tag =>\r\n      <Anchor className='blog-tag' key={tag} to={`${links.blog}/?tag=${tag}`}>\r\n        {tag}\r\n      </Anchor>)\r\n    : undefined\r\n\r\n  return (\r\n    <section>\r\n      <h3>Tags</h3>\r\n      <div className='blog-tag-list'>{tagList}</div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\nimport './BlogMiniCard.css'\r\nimport Anchor from '../Anchor/Anchor'\r\n\r\nconst BlogMiniCard = ({ link, title, img, description }) => {\r\n  return (\r\n    <Anchor to={link} className='blog-mini-card lato'>\r\n      <img src={img} alt='Arte da capa do artigo' />\r\n      <p><strong>{title}</strong></p>\r\n      <p>{description}</p>\r\n    </Anchor>\r\n  )\r\n}\r\n\r\nexport default BlogMiniCard\r\n","import React from 'react'\r\nimport BlogMiniCard from './BlogMiniCard'\r\nimport posts from '../../data/blog/posts/posts.json'\r\n\r\nconst OtherPosts = ({ currentId }) => {\r\n  const maxPosts = 4\r\n  let miniCards = null\r\n  if (posts) {\r\n    const size = posts.length >= maxPosts + 1 ? maxPosts + 1 : posts.length\r\n    miniCards = posts.slice(0, size).filter(post => currentId !== post.id)\r\n    miniCards = miniCards.map(post => (\r\n      <BlogMiniCard\r\n        key={post.id}\r\n        title={post.title}\r\n        link={post.link}\r\n        img={post.images[0]}\r\n        description={post.description}\r\n      />\r\n    ))\r\n\r\n    if (!miniCards || miniCards.length <= 0) {\r\n      return null\r\n    }\r\n\r\n    if (miniCards.length > maxPosts) {\r\n      miniCards.pop()\r\n    }\r\n  } else {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <h3 style={{ marginBlockStart: '10px' }}>Outras postagens</h3>\r\n      <div className='flex flex-wrap justify-between'>\r\n        {miniCards}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default OtherPosts\r\n","import React from 'react'\r\nimport Anchor from '../Anchor/Anchor'\r\nimport links from '../../links'\r\nimport './BlogPost.css'\r\nimport Tags from './Tags'\r\nimport OtherPosts from './OtherPosts'\r\nimport findBlog from '../../utils/findBlog'\r\n\r\nconst BlogPost = ({ children, title, date, author, tags, id }) => {\r\n  const previous = findBlog(id - 1)\r\n  const next = findBlog(id + 1)\r\n\r\n  return (\r\n    <div className='min-max-width center flex-column blog-post'>\r\n      <article>\r\n        <p><Anchor to={links.blog}>&lt; Blog</Anchor></p>\r\n        <h1 className='blog-title'>{title}</h1>\r\n        <p className='blog-date'>Postado por {author} em {date} </p>\r\n        <div className='blog-body'>\r\n          <main className='blog-main'>\r\n            {children}\r\n          </main>\r\n          <aside className='blog-aside'>\r\n            <OtherPosts currentId={id} />\r\n            <Tags tags={tags}/>\r\n          </aside>\r\n        </div>\r\n      </article>\r\n      {(previous || next) &&\r\n        <hr style={{ width: '100%', marginTop: '20px' }}/>\r\n      }\r\n      <ul className='flex flex-wrap justify-between list'>\r\n        <li>\r\n          {previous &&\r\n            <Anchor to={previous.link}>\r\n              &lt; {previous.title}\r\n            </Anchor>\r\n          }\r\n        </li>\r\n        <li>\r\n          {next &&\r\n            <Anchor to={next.link}>\r\n              {next.title} &gt;\r\n            </Anchor>\r\n          }\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogPost\r\n"],"sourceRoot":""}